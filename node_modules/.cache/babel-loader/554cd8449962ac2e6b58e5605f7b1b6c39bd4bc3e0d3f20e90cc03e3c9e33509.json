{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  stocksData: [],\n  stocksDataBackup: [],\n  stocksErrorData: [],\n  category: [],\n  author: []\n};\nexport const stocksSlice = createSlice({\n  name: 'stocks',\n  initialState,\n  reducers: {\n    setStocksData: (state, action) => {\n      state.stocksData = action.payload;\n    },\n    setStocksDataBackup: (state, action) => {\n      state.stocksDataBackup = action.payload;\n    },\n    setCategory: (state, action) => {\n      state.category = action.payload;\n    },\n    setAuthor: (state, action) => {\n      state.author = action.payload;\n    },\n    filterStocksData: (state, action) => {\n      state.stocksData = null;\n    },\n    sortStocksData: (state, action) => {\n      state.stocksData = null;\n    }\n  }\n});\nexport const {\n  setStocksData,\n  setCategory,\n  setAuthor,\n  filterStocksData,\n  sortStocksData,\n  setStocksDataBackup\n} = stocksSlice.actions;\nexport const selectStocksData = state => state.stocks.stocksData;\nexport const stocksDataBackup = state => state.stocks.stocksDataBackup;\nexport const selectCategory = state => state.stocks.category;\nexport const selectAuthor = state => state.stocks.author;\nexport const handleStocksData = data => dispatch => {\n  const tempCategory = data.map(item => item.source);\n  const tempAuthor = data.map(item => item.author);\n  const category = [...new Set(tempCategory)];\n  const author = [...new Set(tempAuthor)];\n  dispatch(setStocksData(data));\n  dispatch(setStocksDataBackup(data));\n  dispatch(setCategory(category));\n  dispatch(setAuthor(author));\n};\nexport const handleStocksDataFilter = (selectedCategory, selectedAuthor, selectedSort) => (dispatch, getState) => {\n  const currentStocksData = stocksDataBackup(getState());\n  console.log('selectedCategory ===> ', selectedCategory.length);\n  console.log('selectedAuthor ===> ', selectedAuthor.length);\n  console.log('selectedSort ===> ', selectedSort.length);\n  if (selectedCategory.length < 1 && selectedAuthor.length < 1 && selectedSort.length < 1) {\n    dispatch(setStocksData(currentStocksData));\n  } else {\n    let condition = '';\n    if (selectedCategory.length > 0) {\n      condition += '&& ';\n    }\n    const finalCondition = condition.substring(2, condition.length);\n    const fArray = currentStocksData.filter(stuff => eval(finalCondition));\n    console.log();\n  }\n};\nexport default stocksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","stocksData","stocksDataBackup","stocksErrorData","category","author","stocksSlice","name","reducers","setStocksData","state","action","payload","setStocksDataBackup","setCategory","setAuthor","filterStocksData","sortStocksData","actions","selectStocksData","stocks","selectCategory","selectAuthor","handleStocksData","data","dispatch","tempCategory","map","item","source","tempAuthor","Set","handleStocksDataFilter","selectedCategory","selectedAuthor","selectedSort","getState","currentStocksData","console","log","length","condition","finalCondition","substring","fArray","filter","stuff","eval","reducer"],"sources":["/Users/perennial/Documents/New/redux-us-stocks/src/features/usStocks/stocksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  stocksData: [],\n  stocksDataBackup: [],\n  stocksErrorData: [],\n  category: [],\n  author: [],\n};\n\nexport const stocksSlice = createSlice({\n  name: 'stocks',\n  initialState,\n  reducers: {\n    setStocksData: (state, action) => {\n      state.stocksData = action.payload;\n    },\n    setStocksDataBackup: (state, action) => {\n      state.stocksDataBackup = action.payload;\n    },\n    setCategory: (state, action) => {\n      state.category = action.payload;\n    },\n    setAuthor: (state, action) => {\n      state.author = action.payload;\n    },\n    filterStocksData: (state, action) => {\n      state.stocksData = null;\n    },\n    sortStocksData: (state, action) => {\n      state.stocksData = null;\n    }\n  },\n})\n\nexport const { setStocksData, setCategory, setAuthor, filterStocksData, sortStocksData, setStocksDataBackup } = stocksSlice.actions;\n\nexport const selectStocksData = (state) => state.stocks.stocksData;\nexport const stocksDataBackup = (state) => state.stocks.stocksDataBackup;\nexport const selectCategory = (state) => state.stocks.category;\nexport const selectAuthor = (state) => state.stocks.author;\n\nexport const handleStocksData = (data) => (dispatch) => {\n    const tempCategory = data.map((item) => item.source);\n    const tempAuthor = data.map((item) => item.author);\n    const category = [...new Set(tempCategory)];\n    const author = [...new Set(tempAuthor)];\n    dispatch(setStocksData(data));\n    dispatch(setStocksDataBackup(data));\n    dispatch(setCategory(category));\n    dispatch(setAuthor(author));\n};\n\nexport const handleStocksDataFilter = (selectedCategory, selectedAuthor, selectedSort) => (dispatch, getState) => {\n  const currentStocksData = stocksDataBackup(getState());\n\n  console.log('selectedCategory ===> ', selectedCategory.length);\n  console.log('selectedAuthor ===> ', selectedAuthor.length);\n  console.log('selectedSort ===> ', selectedSort.length);\n\n  if (selectedCategory.length < 1 && selectedAuthor.length < 1 && selectedSort.length < 1) {\n    dispatch(setStocksData(currentStocksData))\n  } else {\n    let condition = '';\n    if (selectedCategory.length > 0) {\n      condition += '&& ' \n    } \n\n    const finalCondition=condition.substring(2, condition.length);\n    const fArray=currentStocksData.filter(stuff => eval(finalCondition));\n    console.log()\n  }\n}\n\nexport default stocksSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}